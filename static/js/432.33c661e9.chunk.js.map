{"version":3,"file":"static/js/432.33c661e9.chunk.js","mappings":"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","sources":["reduxe/contacts/selectors.js","hooks/useContacts.js","hooks/useNotife.js","components/AddContact/AddContact.js","components/EditContact/EditContact.js","constant/constantStyleTab.js","components/Contact/Contact.js","components/FilterInTable/FilterInTable.js","components/ListContacts/ListContacts.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.request;\nexport const selectFilterNumber = state => state.filter.number;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter, selectFilterNumber],\n  // Функція перетворювач\n  (contacts, filter, filterNumber) => {\n    return contacts.filter(\n      element =>\n        element.name.toUpperCase().includes(filter.toUpperCase()) &&\n        element.number.includes(filterNumber)\n    );\n  }\n);\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from 'reduxe/contacts/selectors';\nconst useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return { contacts, isLoading, error };\n};\n\nexport default useContacts;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst useNotife = () => {\n  const showFailure = textFailure => {\n    Notify.failure(textFailure, { timeout: 1000 });\n  };\n\n  return { showFailure };\n};\n\nexport default useNotife;\n","import { useDispatch } from 'react-redux';\nimport { addContacts } from 'reduxe/contacts/operation';\nimport useContacts from 'hooks/useContacts';\nimport useNotife from 'hooks/useNotife';\n\n//MUI\nimport { Button, Box, TextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst findContactByName = (contacts, userName) => {\n  const textFilter = userName.toUpperCase();\n  return contacts.find(element => element.name.toUpperCase() === textFilter);\n};\n\nconst AddContact = () => {\n  const { contacts } = useContacts();\n  const { showFailure } = useNotife();\n\n  const dispatcher = useDispatch();\n\n  const addnewContact = (contacts, newContact) => {\n    if (findContactByName(contacts, newContact.name)) {\n      showFailure(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatcher(addContacts(newContact));\n\n    return true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.phone.value,\n    };\n\n    addnewContact(contacts, newContact) && form.reset();\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        // Validate\n        sx={{\n          mt: 1,\n          maxWidth: 480,\n        }}\n      >\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          inputProps={{\n            inputMode: 'text',\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          }}\n          id=\"name\"\n          label=\"User name\"\n          name=\"name\"\n          autoComplete=\"name\"\n          autoFocus\n          // helperText=\"Некоректне імʼя.\"\n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          inputProps={{\n            inputMode: 'text',\n            pattern: String.raw`\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}`,\n          }}\n          name=\"phone\"\n          label=\"Phone number\"\n          type=\"phone\"\n          id=\"phone\"\n          // error\n          // helperText=\"Некоректний номер телефону.\"\n        />\n        <Box\n          m={1}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          // sx={boxDefault}\n        >\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            sx={{\n              mt: 3,\n              mb: 2,\n              maxWidth: 240,\n            }}\n          >\n            Add new contact\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default AddContact;\n","import { useDispatch } from 'react-redux';\nimport { changeContacts } from 'reduxe/contacts/operation';\nimport useContacts from 'hooks/useContacts';\nimport useNotife from 'hooks/useNotife';\n\n//MUI\nimport { Button, Box, TextField, Dialog, DialogTitle } from '@mui/material';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst findContactByNameAndId = (contacts, userName, id) => {\n  const textFilter = userName.toUpperCase();\n  return contacts.find(\n    element => element.name.toUpperCase() === textFilter && element.id !== id\n  );\n};\n\nconst EditContact = ({ contact, isOpen, handlerClose }) => {\n  const { contacts } = useContacts();\n  const { showFailure } = useNotife();\n\n  const dispatcher = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.phone.value,\n    };\n\n    if (findContactByNameAndId(contacts, newContact.name, contact.id)) {\n      showFailure(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatcher(\n      changeContacts({\n        id: contact.id,\n        contact: newContact,\n      })\n    );\n\n    handlerClose();\n  };\n\n  return (\n    <Dialog maxWidth=\"lg\" open={isOpen} onClose={handlerClose} sx={{ p: 2 }}>\n      <DialogTitle variant=\"h4\">Edit contact:</DialogTitle>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          mt: 1,\n          maxWidth: 480,\n          p: 2,\n        }}\n      >\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          inputProps={{\n            inputMode: 'text',\n            pattern:\n              \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n          }}\n          id=\"name\"\n          label=\"User name\"\n          name=\"name\"\n          autoComplete=\"name\"\n          autoFocus\n          defaultValue={contact.name}\n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          inputProps={{\n            inputMode: 'text',\n            pattern: String.raw`\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}`,\n          }}\n          name=\"phone\"\n          label=\"Phone number\"\n          type=\"phone\"\n          id=\"phone\"\n          defaultValue={contact.number}\n        />\n        <Box\n          m={1}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          gap={2}\n          // sx={boxDefault}\n        >\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            startIcon={<SaveAltIcon />}\n            sx={{\n              mt: 3,\n              mb: 2,\n              maxWidth: 240,\n            }}\n          >\n            Save contact\n          </Button>\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            startIcon={<CancelIcon />}\n            sx={{\n              mt: 3,\n              mb: 2,\n              maxWidth: 240,\n            }}\n            onClick={handlerClose}\n          >\n            Cancel\n          </Button>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n};\n\nexport default EditContact;\n","import { TableCell, TableRow } from '@mui/material';\nimport { tableCellClasses } from '@mui/material/TableCell';\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'reduxe/contacts/operation';\nimport EditContact from 'components/EditContact/EditContact';\n\n//mui\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { StyledTableCell, StyledTableRow } from 'constant/constantStyleTab';\n\nconst Contact = ({ contact }) => {\n  const dispatcher = useDispatch();\n  const [showEditWindow, setShowEditWindow] = useState(false);\n\n  const handlerDelete = () => dispatcher(deleteContacts(contact.id));\n\n  return (\n    <StyledTableRow>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        {contact.name}\n      </StyledTableCell>\n\n      <StyledTableCell align=\"left\">{contact.number}</StyledTableCell>\n\n      <StyledTableCell align=\"left\">\n        <IconButton aria-label=\"delete\" color=\"primary\" onClick={handlerDelete}>\n          <DeleteIcon />\n        </IconButton>\n      </StyledTableCell>\n\n      <StyledTableCell align=\"left\">\n        <IconButton\n          aria-label=\"edit\"\n          color=\"primary\"\n          onClick={() => setShowEditWindow(true)}\n        >\n          <EditIcon />\n        </IconButton>\n      </StyledTableCell>\n      <EditContact\n        contact={contact}\n        isOpen={showEditWindow}\n        handlerClose={() => setShowEditWindow(false)}\n      />\n    </StyledTableRow>\n  );\n};\n\nContact.propType = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    edit: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default Contact;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter, changeFilterNumber } from 'reduxe/sliceFilter';\n\nimport { TextField } from '@mui/material';\nimport { StyledTableCell, StyledTableRow } from 'constant/constantStyleTab';\n\nconst FilterInTable = () => {\n  const dispatcher = useDispatch();\n\n  const handlerChangeFilter = event => {\n    dispatcher(changeFilter(event.currentTarget.value));\n  };\n\n  const handlerChangeFilterNumber = event => {\n    dispatcher(changeFilterNumber(event.currentTarget.value));\n  };\n\n  return (\n    <StyledTableRow>\n      <StyledTableCell component=\"th\" scope=\"row\">\n        <TextField\n          type=\"search\"\n          name=\"filter\"\n          variant=\"standard\"\n          fullWidth\n          label=\"Find by name\"\n          onChange={handlerChangeFilter}\n        />\n      </StyledTableCell>\n\n      <StyledTableCell align=\"left\">\n        <TextField\n          type=\"search\"\n          name=\"filter\"\n          variant=\"standard\"\n          fullWidth\n          label=\"Find by number\"\n          onChange={handlerChangeFilterNumber}\n        />\n      </StyledTableCell>\n\n      <StyledTableCell align=\"left\"></StyledTableCell>\n\n      <StyledTableCell align=\"left\"></StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default FilterInTable;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'reduxe/contacts/selectors';\nimport Contact from 'components/Contact/Contact';\n\nimport FilterInTable from 'components/FilterInTable/FilterInTable';\n//MUI\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@mui/material';\nimport { StyledTableCell } from 'constant/constantStyleTab';\n\nconst ListContacts = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ maxWidth: 480 }} aria-label=\"customized table\">\n        {/* <Table aria-label=\"customized table\"> */}\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Name</StyledTableCell>\n            <StyledTableCell align=\"left\">Phone</StyledTableCell>\n            <StyledTableCell align=\"right\"></StyledTableCell>\n            <StyledTableCell align=\"right\"></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <FilterInTable />\n          {visibleContacts.map(contact => (\n            <Contact key={contact.id} contact={contact} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ListContacts;\n","import { useDispatch } from 'react-redux';\nimport AddContact from 'components/AddContact/AddContact';\nimport ListContacts from 'components/ListContacts/ListContacts';\n// import Filter from 'components/Filter/Filter';\nimport Spinner from 'components/Spinner/Spinner';\n\nimport { fetchAllContacts } from 'reduxe/contacts/operation';\nimport { useEffect } from 'react';\nimport useContacts from 'hooks/useContacts';\n\n//MUI\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nconst Contacts = () => {\n  const { contacts, isLoading, error } = useContacts();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        padding: 2,\n      }}\n    >\n      <Typography variant=\"h3\">Phonebook</Typography>\n\n      <AddContact />\n\n      {contacts.length > 0 && (\n        <>\n          <Typography variant=\"h4\">Contacts</Typography>\n\n          {/* <Filter /> */}\n\n          <ListContacts />\n        </>\n      )}\n\n      {isLoading && !error && <Spinner />}\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","request","number","filterNumber","element","name","toUpperCase","includes","useSelector","showFailure","textFailure","Notify","timeout","useContacts","useNotife","dispatcher","useDispatch","Box","component","onSubmit","event","preventDefault","form","target","newContact","elements","value","phone","userName","textFilter","find","findContactByName","addContacts","addnewContact","reset","sx","mt","maxWidth","TextField","margin","required","fullWidth","inputProps","inputMode","pattern","id","label","autoComplete","autoFocus","String","raw","type","m","display","justifyContent","alignItems","Button","variant","startIcon","Add","mb","contact","isOpen","handlerClose","Dialog","open","onClose","p","DialogTitle","findContactByNameAndId","changeContacts","defaultValue","gap","SaveAlt","Cancel","onClick","StyledTableCell","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","primary","dark","color","common","white","fontSize","StyledTableRow","TableRow","action","hover","border","Contact","useState","showEditWindow","setShowEditWindow","scope","align","IconButton","deleteContacts","Delete","Edit","propType","PropTypes","edit","isRequired","onChange","changeFilter","currentTarget","changeFilterNumber","visibleContacts","TableContainer","Paper","Table","TableHead","TableBody","map","dispatch","useEffect","fetchAllContacts","padding","Typography","length","Spinner"],"sourceRoot":""}